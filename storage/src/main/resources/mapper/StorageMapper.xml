<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.example.mapper.StorageMapper">
    <resultMap id="BaseResultMap" type="org.example.model.Storage">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="commodity_code" property="commodityCode" jdbcType="BIGINT"/>
        <result column="count" property="count" jdbcType="INTEGER"/>
    </resultMap>

    <select id="selectById" resultType="org.example.model.Storage">
        select id, commodity_code, count
        from storage_tbl
        WHERE id = #{id}
    </select>

    <select id="findByCommodityCode" resultType="org.example.model.Storage">
        select id, commodity_code commodityCode, count
        from storage_tbl
        WHERE commodity_code = #{commodityCode}
    </select>

    <update id="updateById">
        update storage_tbl
        set count = #{count,jdbcType=INTEGER}
        WHERE id = #{id}
    </update>

    <insert id="insert" parameterType="org.example.model.Storage">
        insert into storage_tbl (commodity_code, count)
        values (#{commodityCode,jdbcType=BIGINT}, #{count,jdbcType=INTEGER})
    </insert>

    <insert id="insertBatch" parameterType="org.example.model.Storage">
        insert into storage_tbl (commodity_code, count)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.commodityCode,jdbcType=BIGINT}, #{item.count,jdbcType=INTEGER})
        </foreach>
    </insert>

    <update id="updateBatch">
        update storage_tbl set count = 100
        WHERE id IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        and commodity_code = #{commodityCode,jdbcType=BIGINT}
    </update>
</mapper>